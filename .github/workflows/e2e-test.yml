name: E2E test

on:
  schedule:
    - cron: "0 4,7,10 * * *"
  workflow_dispatch:

jobs:
  e2e-tests:
    name: run e2e test on (self-hosted linux 8cpu node14)
    env:
      AZURE_ACCOUNT_NAME: ${{ secrets.TEST_USER_NAME }}
      AZURE_ACCOUNT_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.TEST_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.TEST_TENANT_ID }}
      M365_ACCOUNT_NAME: ${{ secrets.TEST_USER_NAME }}
      M365_ACCOUNT_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      M365_TENANT_ID: ${{ secrets.TEST_TENANT_ID_2 }}
      CI_ENABLED: "true"

    runs-on: [self-hosted, linux, 8cpu]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Download Simple Auth bits
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          shell: pwsh
          command: |
            ./.github/scripts/downloadSimpleAuth.ps1

      - name: Setup project
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            npm run setup

      - name: Package CLI and install
        run: |
          npm run package
          npm pack
          mv *.tgz teamsfx-cli.tgz
          npm install -g teamsfx-cli.tgz
        working-directory: packages/cli

      - name: E2E Test clean
        run: |
          npx lerna run test:e2e:clean

      - name: E2E Test in Parallel
        run: |
          npx lerna run test:e2e:parallel

      - name: Reset test tag
        if: success()
        run: |
           git tag -f e2e HEAD
           git push origin -f e2e

  create-ado-issue:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check git log 
        id: git-log
        shell: bash
        run: |
          git_log=$(git log --pretty="<tr> <td>%h</td> <td>%ad</td> <td>%s</td> <td><a href=\"#\" data-vss-mention=\"version:2.0,fcc6f63a-9b8e-68b0-a9d3-eaf10623d0df\"> %ae &#127867; </a></td> </tr>" e2e..HEAD | grep -v "noreply" | tee | tr -d '\n')
          echo $git_log
          echo "::set-output name=log::${git_log[@]}"

      - name: Create azure devops issue if test is failed
        uses: azure/CLI@v1
        with:
          azcliversion: 2.25.0
          inlineScript: |
            export AZURE_DEVOPS_EXT_PAT=${{ secrets.ADO_PAT }}
            az extension add --name azure-devops
            az boards work-item create --title="E2E tests failed" \
                             --type=Bug \
                             --area="Microsoft Teams Extensibility\Teams Extensibility E2E Team" \
                             --assigned-to="haolong@microsoft.com" \
                             --iteration="Microsoft Teams Extensibility" \
                             --organization="https://msazure.visualstudio.com/" \
                             --project="Microsoft Teams Extensibility" \
                             --fields="Microsoft.VSTS.TCM.ReproSteps=<a>https://github.com/LongOddCode/lerna-test/actions/runs/${{ github.run_id }}</a>" \
                             --description="<table class=\"w3-table w3-striped w3-bordered\"><tr><th>Hash</th> <th>Time</th> <th>Message</th> <th>author</th> </tr>${{ steps.git-log.outputs.log }}</table>"
