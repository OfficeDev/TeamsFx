name: Environment Checker Integration Test

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/env-checker-ci.yml'
      - '.github/env-checker'
      - 'packages/vscode-extension/src/debug/depsChecker/**'
      - 'packages/vscode-extension/test/suite/envChecker/**'
  schedule:
    # Runs everyday 00:00 UTC
    - cron:  '0 0 * * *'
  workflow_dispatch: # Manual trigger

jobs:
  build-and-test:
    name: Build and Test OS "${{ matrix.os }}", Node.js "${{ matrix.node-version }}", Azure Functions Core Tools "${{ matrix.func-version }}", .NET SDK "${{ matrix.dotnet-version }}"

    strategy:
      matrix: # TODO: add more versions and cases where Node.js do not exist
        os: [windows-latest, macos-latest, ubuntu-latest]
        node-version: [14]
        func-version: [none, 3]
        dotnet-version: [none, 3.1.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Uninstalling .NET on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          powershell -NoProfile -Command ./.github/env-checker/uninstall-dotnet.ps1

      - name: Uninstalling .NET on macOS or Ubuntu
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' }}
        run: |
          ./.github/env-checker/uninstall-dotnet.sh

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Azure Functions Core Tools For Linux
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.func-version != 'none' }}
        run: |
          sudo npm install --unsafe-perm -g azure-functions-core-tools@${{ matrix.func-version }}

      - name: Setup Azure Functions Core Tools For Windows and macOS
        if: ${{ matrix.os != 'ubuntu-latest' && matrix.func-version != 'none' }}
        run: |
          npm install -g azure-functions-core-tools@${{ matrix.func-version }}

      - name: Setup .NET SDK
        if: ${{ matrix.dotnet-version != 'none' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Setup project
        run: |
          npm run setup

      - name: Integration Test
        working-directory: ./packages/vscode-extension
        run: |
          npm run test:env-checker
