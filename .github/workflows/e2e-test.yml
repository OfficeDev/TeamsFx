name: E2E test

on:
  schedule:
    - cron: "0 4,7,10 * * *"
  workflow_dispatch:

jobs:
  e2e-tests:
    name: run e2e test on (self-hosted linux 8cpu node14)
    env:
      AZURE_ACCOUNT_NAME: ${{ secrets.TEST_USER_NAME }}
      AZURE_ACCOUNT_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.TEST_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.TEST_TENANT_ID }}
      M365_ACCOUNT_NAME: ${{ secrets.TEST_USER_NAME }}
      M365_ACCOUNT_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      M365_TENANT_ID: ${{ secrets.TEST_TENANT_ID_2 }}
      CI_ENABLED: "true"

    runs-on: [self-hosted, linux, 8cpu]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}
          clean: false

      - name: setup env
        env:
          creds: ${{ secrets.AZURE_TEST_CREDENTIALS }}
        run: |
          bash setup-testing-env.sh E2E-TEST-COLLABORATOR-USER-NAME
        working-directory: .github/scripts

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Download Simple Auth bits
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          shell: pwsh
          command: |
            ./.github/scripts/downloadSimpleAuth.ps1

      - name: Setup project
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            npm run setup

      - name: Package CLI and install
        run: |
          rm -f *.tgz
          npm pack
          mv *.tgz teamsfx-cli.tgz
          npm install -g teamsfx-cli.tgz
        working-directory: packages/cli

      - name: E2E Test clean
        run: |
          npx lerna run test:e2e:clean

      - name: E2E Test in Parallel
        run: |
          npx lerna run test:e2e:parallel

      - name: Reset test tag
        if: success()
        run: |
          git tag -f e2e HEAD
          git push origin -f e2e

      - name: Clean the Repo
        run: |
          rsync --delete-before -d /tmp/empty/ ./

  create-ado-issue:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: ${{ failure() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check git log
        id: git-log
        shell: bash
        run: |
          declare -A email_uid
          for i in $(git log --pretty="%ae"  e2e..HEAD | sort | uniq);
          do
            if [ ${email_uid[$i]+exist} ]; then
              continue
            fi

            resp=$(curl -u :${{ secrets.ADO_PAT }} "https://vssps.dev.azure.com/msazure/_apis/identities?searchFilter=General&filterValue=$i&queryMembership=None&api-version=6.0")
            uid=$(echo $resp | jq '.value | .[] | .id' | xargs echo)
            email_uid[$i]=$uid
          done
          echo ${email_uid[@]}

          gitlog=$(git log --pretty=format:'{"commit":"%h","subject":"%s","email":"%aE","date":"%aD"},' e2e..HEAD | grep -v "noreply")
          gitlog=[${gitlog::-1}]

          description="<tr> <th>Commit</th> <th>Date</th> <th>Subject</th> <th>Author</th> </tr>"
          for row in $(echo $gitlog | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
            description="$description <tr> <td>$(_jq '.commit')</td> <td>$(_jq '.subject')</td> <td>$(_jq '.date')</td> <td><a href=\"#\" data-vss-mention=\"version:2.0,${email_uid[$(_jq '.email')]}\">$(_jq '.email')</a></td> </tr> "
          done
          description=`echo $description | sed -e 's/"/\\\"/g'`
          echo "::set-output name=description::$description"

      - name: Create azure devops issue if test is failed
        uses: azure/CLI@v1
        with:
          azcliversion: 2.25.0
          inlineScript: |
            export AZURE_DEVOPS_EXT_PAT=${{ secrets.ADO_PAT }}
            az extension add --name azure-devops
            az boards work-item create --title="E2E tests failed" \
                             --type=Bug \
                             --area="Microsoft Teams Extensibility\Teams Extensibility E2E Team" \
                             --assigned-to="zhiyu.you@microsoft.com" \
                             --iteration="Microsoft Teams Extensibility" \
                             --organization="https://msazure.visualstudio.com/" \
                             --project="Microsoft Teams Extensibility" \
                             --fields "Microsoft.VSTS.TCM.ReproSteps=<a>https://github.com/OfficeDev/TeamsFx/actions/runs/${{ github.run_id }}</a>" "Microsoft.VSTS.Common.Triage=Triaged" \
                             --description="<table class=\"w3-table w3-striped w3-bordered\">${{ steps.git-log.outputs.description }}</table>"

      - name: Send E-mail to the whole team
        uses: satak/webrequest-action@master
        with:
          url: https://prod-30.eastus.logic.azure.com:443/workflows/9aa865da96054bd89749c2d4ce68df8e/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uIoB06NUHSnKoZeWjNDI9t4rrhbTBKxJNiBtDoMRSQs
          method: POST
          payload: |
            {
              "to": "vsciotadt@microsoft.com",
              "body": "TeamsFx CLI E2E Test failed <table class=\"w3-table w3-striped w3-bordered\">${{ steps.git-log.outputs.description }}</table>The detail can be found here: https://github.com/OfficeDev/TeamsFx/actions/runs/${{ github.run_id }}",
              "subject": "[Failure] TeamsFx CLI E2E Test ${{ github.run-id }}",
              "apiKey": "${{ secrets.MAIL_API_KEY }}"
            }
