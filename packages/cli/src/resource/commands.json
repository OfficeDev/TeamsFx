{
  "auth": {
    "description": "Manage Microsoft 365 and Azure accounts."
  },
  "auth.login": {
    "description": "Log in to Microsoft 365 or Azure account."
  },
  "auth.login.azure": {
    "description": "Log in to Azure account.",
    "options": {
      "tenant": "Authenticate with a specific Microsoft Entra tenant.",
      "service-principal": "Authenticate Azure with a credential representing a service principal",
      "username": "Client ID for service principal",
      "password": "Provide client secret or a pem file with key and public certificate."
    }
  },
  "auth.login.m365": {
    "description": "Log in to Microsoft 365 account."
  },
  "auth.logout": {
    "description": "Log out of Microsoft 365 or Azure account.",
    "arguments": {
      "service": "Azure or Microsoft 365."
    }
  },
  "auth.show": {
    "description": "Display all connected Microsoft 365 and Azure accounts."
  },
  "add": {
    "description": "Add feature to your Microsoft Teams application."
  },
  "add.spfx-web-part": {
    "description": "Auto-hosted SPFx web part tightly integrated with Microsoft Teams."
  },
  "create": {
    "description": "Create a new Microsoft Teams application."
  },
  "create.sample": {
    "description": "Create an app from existing sample."
  },
  "collaborator": {
    "description": "Check, grant and list permissions for who can access and manage Microsoft Teams application and Microsoft Entra application."
  },
  "collaborator.grant": {
    "description": "Grant permission for another account."
  },
  "collaborator.status": {
    "description": "Check user's permission.",
    "options": {
      "all": "Whether to list all collaborators."
    }
  },
  "provision": {
    "description": "Run the provision stage in teamsapp.yml or teamsapp.local.yml.",
    "options": {
      "resource-group": "Specifies resource group name.",
      "region": "Specifies resource group region."
    }
  },
  "preview": {
    "description": "Preview the current application."
  },
  "deploy": {
    "description": "Run the deploy stage in teamsapp.yml or teamsapp.local.yml."
  },
  "entra-app": {
    "description": "Manage the Microsoft Entra app in the current application."
  },
  "entra-app.update": {
    "description": "Update the Microsoft Entra app in the current application."
  },
  "env": {
    "description": "Manage environments."
  },
  "env.add": {
    "description": "Add a new environment by copying from the specified environment."
  },
  "env.list": {
    "description": "List all environments."
  },
  "env.reset": {
    "description": "Reset environment file."
  },
  "list": {
    "description": "List available Microsoft Teams application templates and samples."
  },
  "list.samples": {
    "description": "List available Microsoft Teams application samples.",
    "options": {
      "tag": "Specifies the tag to filter the samples."
    }
  },
  "list.templates": {
    "description": "List available Microsoft Teams application templates.",
    "options": {
      "format": "Specifies the format of the results."
    }
  },
  "launchinfo": {
    "description": "Get launch information of an acquired M365 App.",
    "options": {
      "title-id": "Title ID of the acquired M365 App.",
      "manifest-id": "Manifest ID of the acquired M365 App."
    }
  },
  "install": {
    "description": "Sideload a given application package across Microsoft 365.",
    "options": {
      "file-path": "Path to the App manifest zip package.",
      "xml-path": "Path to the XML manifest xml file."
    }
  },
  "uninstall": {
    "description": "Remove an acquired M365 App.",
    "options": {
      "title-id": "Title ID of the acquired M365 App.",
      "manifest-id": "Manifest ID of the acquired M365 App."
    }
  },
  "package": {
    "description": "Build your Microsoft Teams app into a package for publishing.",
    "options": {
      "output-zip-path": "Specifies the output path of the zipped app package, defaults to '${folder}/appPackage/build/appPackage.${env}.zip'.",
      "output-manifest-path": "Specifies the output path of the generated manifest path, defaults to '${folder}/appPackage/build/manifest.${env}.json'"
    }
  },
  "publish": {
    "description": "Run the publish stage in teamsapp.yml."
  },
  "upgrade": {
    "description": "Upgrade the project to work with the latest version of Teams Toolkit.",
    "options": {
      "force": "Force upgrade the project to work with the latest version of Teams Toolkit."
    },
    "success": "Upgrade project successfully."
  },
  "doctor": {
    "account": {
      "SideLoadingDisabled": "Your Microsoft 365 tenant admin hasn't enabled custom app upload permission for your account. You can't install your app to Teams!",
      "NotSignIn": "You have not logged in to your Microsoft 365 account yet. Please use teamsapp auth login command to login to your Microsoft 365 account.",
      "SignInSuccess": "Microsoft 365 Account (%s) is logged in and custom app upload permission is enabled."
    },
    "node" : {
      "NotFound": "Cannot find Node.js. Node.js used for developing Teams apps with JavaScript or TypeScript using Teams Toolkit for Visual Studio Code. Visit https://nodejs.org to install the LTS version.",
      "NotSupported": "Node.js (%s) is not the officially supported version (%s). Your project may continue to work but we recommend to install the supported version.",
      "Success": "Node.js version (%s) is installed."
    },
    "dotnet" : {
      "NotFound": "Cannot find .NET Core SDK. .NET Core SDK is used for developing Teams app in C# using Teams Toolkit for Visual Studio. Visit https://dotnet.microsoft.com/en-us/download to install the LTS version.",
      "NotSupported": ".NET Core SDK (%s) is not the officially supported version (%s).",
      "Success": ".NET Core SDK version (%s) is installed."
    },
    "func" : {
      "NotFound": "Cannot find Azure Functions Core Tools.",
      "NotSupported": "Azure Functions Core Tools (%s) is not the officially supported version (%s).",
      "Success": "Azure Functions Core Tools version (%s) is installed."
    },
    "cert" : {
      "NotFound": "Cannot find local Certificate.",
      "FoundNotTrust": "Local Certificate is found but not trusted.",
      "Success": "Local Certificate is found and is trusted."
    }
  }
}
