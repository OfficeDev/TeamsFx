name: TeamsFx-CD Triggers

on:
  workflow_run:
    workflows: ["CD"]
    branches: ["main", "dev", "hotfix/**", "prerelease"]
    types: ["completed"]

jobs:
  TeamsFxCICDTestTriggers:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && !startsWith(github.event.workflow_run.head_branch, 'hotfix') }}
    steps:
      - name: Trigger TeamsFx-CICD-Test
        run: |
          curl \
              -u :${{ secrets.TEAMSFX_BOT }} \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/OfficeDev/TeamsFx-CICD-Test/actions/workflows/trigger_cicd_by_${{ github.event.workflow_run.head_branch }}.yml/dispatches \
              -d "{\"ref\":\"main\"}"

  DownloadAndOutput:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      zipLink: ${{ steps.downloadUrl.outputs.result }}
    steps:
      - name: Download artifact
        id: downloadUrl
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "release"
            })[0];
            return matchArtifact.url
            
  CallAzurePipeline:
    runs-on: ubuntu-latest
    needs: DownloadAndOutput
    steps:
      - name: Call Azure Pipeline
        if: ${{needs.downloadAndOutput.outputs.server_version}}
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: https://devdiv.visualstudio.com/InternalTools
          azure-pipeline-name: TeamsFx-Dev17-CD
          azure-devops-token: ${{ secrets.VS_ADO_PAT }}
          azure-pipeline-variables: '{"zipLink": ${{needs.downloadAndOutput.outputs.zipLink}}}'
  
  CheckSetupSuccess:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14
      - name: Setup project
        id: setup
        run: 
          npm run setup
        continue-on-error: true
      - name: Info 
        if: steps.setup.outcome != 'success'
        run: |
          echo "`npm run setup` failed after current project finish CD,\
           it may be the inconsistency of package dependencies caused by separate release,\
           please confirm this problem will not affect the CI of subsequent PRs."