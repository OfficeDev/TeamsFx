name: CD

on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, beta, rc, stable)"
        required: true
        default: "rc"
      isPreview:
        description: "ensure release ttk for preview(yes or no)"
        required: false
        default: 'no'
      skip-version-rc:
        description: "release RC version just with lerna publish, skip run lerna version(yes or no)"
        required: false
        default: "no"
      pkgs:
        type: string
        required: false
        description: "Please enter the package names you want to publish, such as cli, vscode, sdk, server and template. Please separate multiple entries with spaces"
  schedule:
    - cron: "0 0 * * *"

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.CD_PAT }}
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Install wine64
        run: |
          sudo apt update
          sudo apt install wine64 -y

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc

      - name: manage pkgs to release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.pkgs }}
        run: bash .github/scripts/lerna.sh ${{github.event.inputs.pkgs}}

      - name: Setup project
        run: |
          npm run setup

      - name: Setup git
        run: |
          git config --global user.name 'MSFT-yiz'
          git config --global user.email 'yiz@microsoft.com'

      - name: release alpha npm packages to npmjs.org
        run: |
          npx lerna version prerelease --preid=alpha.$(git rev-parse --short HEAD) --exact --no-push --allow-branch ${GITHUB_REF#refs/*/} --yes

      - name: version change
        id: version-change
        run: |
          echo "::set-output name=CHANGED::$(git tag --points-at HEAD | xargs)"
          echo "::set-output name=TEMPLATE_VERSION::$(git tag --points-at HEAD | grep templates)"
          echo "::set-output name=EXTENSION_VERSION_NUM::$(git tag --points-at HEAD | grep ms-teams-vscode-extension@ | cut -d '@' -f2)"
          echo "::set-output name=EXTENSION_VERSION::$(git tag --points-at HEAD | grep ms-teams-vscode-extension@)"
          echo "::set-output name=SERVER_VERSION_NUM::$(git tag --points-at HEAD | grep @microsoft/teamsfx-server@ | cut -d '@' -f3)"
          echo "::set-output name=SERVER_VERSION::$(git tag --points-at HEAD| grep @microsoft/teamsfx-server@)"
          echo "::set-output name=SIMPLEAUTH_VERSION::$(git tag --points-at HEAD | grep simpleauth)"
          echo "::set-output name=SIMPLEAUTH_VERSION_NUM::$(git tag --points-at HEAD| grep simpleauth| cut -d '@' -f2)"
          if git tag --points-at HEAD | grep templates | grep rc;
          then
              git push -d origin $(git tag --points-at HEAD | grep templates | grep rc)
          fi

      - name: replace sideloading placeholders
        run: bash .github/scripts/sideloading-replace.sh
        env:
          SIDELOADING_SERVICE_ENDPOINT: ${{ secrets.SIDELOADING_SERVICE_ENDPOINT }}
          SIDELOADING_SERVICE_SCOPE: ${{ secrets.SIDELOADING_SERVICE_SCOPE }}

      - name: commit change on local
        run: |
          git add packages/cli/src/cmds/m365/serviceConstant.ts
          git commit -m "chore: replace sideloading placeholders"

      - name: publish alpha release to npm org
        run: |
          npx lerna publish from-package --dist-tag=alpha --yes --allow-branch ${GITHUB_REF#refs/*/}

      - name: update extension ai key
        uses: jossef/action-set-json-field@v1
        with:
          file: ./packages/vscode-extension/package.json
          field: aiKey
          value: ${{ secrets.EXT_PUBLIC_AIKEY }}

      - name: commit change on local
        run: |
          git add .
          git commit -m "chore: update ai key"

      - name: publish rc npm packages to npmjs.org
        run: |
          npx lerna publish from-package --dist-tag=rc --yes

      - name: Calculate Version Num
        id: preview-version
        working-directory: packages/vscode-extension
        run: |
          DATE_WITH_TIME=`date "+%Y%m%d%H"`
          PACKAGE_VERSION=$(jq -r .version package.json | cut -d '.' -f 1,2)
          TTK_VERSION=$PACKAGE_VERSION.$DATE_WITH_TIME
          echo "::set-output name=version::$TTK_VERSION"
          echo $TTK_VERSION

      - name: pack vsix for preview
        env:
          RELEASE: preview
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            sleep 20
            cd ./packages/vscode-extension
            touch test.vsix
            rm *.vsix
            npm install --only=production
            npx vsce package --pre-release ${{ steps.preview-version.outputs.version }}

      - name: release preview TTK to github release page
        uses: ncipollo/release-action@v1.10.0
        with:
          token: ${{ secrets.CD_PAT }}
          tag: "vscode-extension-V3-${{ steps.preview-version.outputs.version }}"
          artifacts: ./packages/vscode-extension/*.vsix
          artifactErrorsFailBuild: true
          prerelease: true